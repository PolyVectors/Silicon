"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[128],{39738:e=>{e.exports=JSON.parse('{"functions":[],"properties":[{"name":"OnStart","desc":"An implementation that fires when Silicon starts.","lua_type":"Implements","readonly":true,"source":{"line":24,"path":"src/silicon/Modules/Implements/init.luau"}},{"name":"OnPlayerAdded","desc":"An implementation that passes in players as arguments each time the Players.PlayerAdded signal is fired.","lua_type":"Implements","readonly":true,"source":{"line":33,"path":"src/silicon/Modules/Implements/init.luau"}},{"name":"OnCharacterAdded","desc":"An implementation that passes in players as arguments each time the Players.PlayerAdded signal is fired.","lua_type":"Implements","readonly":true,"source":{"line":42,"path":"src/silicon/Modules/Implements/init.luau"}},{"name":"None","desc":"Does nothing.","lua_type":"Implements","readonly":true,"source":{"line":51,"path":"src/silicon/Modules/Implements/init.luau"}}],"types":[{"name":"Implements","desc":"This type dictates all of the default implementations that can be implemented into a Service/Controller.","lua_type":"\\"OnStart\\" | \\"OnPlayerAdded\\" | \\"OnCharacterAdded\\" | \\"None\\"","source":{"line":15,"path":"src/silicon/Modules/Implements/init.luau"}}],"name":"Implements","desc":"A subclass contained under the main Silicon class that handles the implementations for Singletons.","source":{"line":7,"path":"src/silicon/Modules/Implements/init.luau"}}')}}]);